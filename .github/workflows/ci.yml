name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
  
          
    steps:
        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: ^1.22.1
        
        - name: Wait for PostgreSQL
          run: |
            until pg_isready -h localhost -p 5433 -U ${{ secrets.POSTGRES_USER }}; do
              echo "$(date) - waiting for database to start"
              sleep 2
            done
        
        - name: Install golang-migrate
          run: |
           curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
           sudo mv migrate.linux-amd64 /usr/bin/migrate
           which migrate
          
          

        - name: Database Migration
          env:
            POSTGRES_HOST: localhost
            POSTGRES_PORT: 5433
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          run: make migrateup
        
        - name: Test
          env:
            POSTGRES_HOST: localhost
            POSTGRES_PORT: 5433
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          run: make test
          